name: main

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency: ci-${{ github.ref }}

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  update_dependencies:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
      - name: cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: sbt-dependencies-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}
          restore-keys: |
            sbt-dependencies-cache-
      - run: sbt update

  build:
    runs-on: ubuntu-latest
    needs: update_dependencies
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
      - name: cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: sbt-dependencies-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}
          restore-keys: |
            sbt-dependencies-cache-
      - run: sbt scalafmtCheckAll
      - run: sbt compile
      - run: sbt Test/compile
      - run: sbt IntegrationTest/compile
      - name: Store targets
        uses: alehechka/upload-tartifact@v1
        with:
          name: targets
          path: |
            target/**/*
          if-no-files-found: error
          retention-days: 1

  generate-doc:
    runs-on: ubuntu-latest
    needs: update_dependencies
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
      - name: cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: sbt-dependencies-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}
          restore-keys: |
            sbt-dependencies-cache-
      - run: sbt docs/mdoc
      - name: Store docs targets
        uses: alehechka/upload-tartifact@v1
        with:
          name: targets
          path: |
            handrail-docs/target/**/*
          if-no-files-found: error
          retention-days: 1

  unit_test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
      - name: cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: sbt-dependencies-cache-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}
          restore-keys: |
            sbt-dependencies-cache-
      - name: Download targets
        uses: alehechka/download-tartifact@v1
        with:
          name: targets
      - run: sbt Test/test
      - name: Test Report
        uses: dorny/test-reporter@v1.5.0
        if: success() || failure() # run this step even if previous step failed
        with:
          list-suites: "all"
          list-tests: "all"
          max-annotations: 10
          fail-on-error: true
          name: unit tests
          path: target/test-reports/*.xml
          reporter: java-junit

  tag:
    runs-on: ubuntu-latest
    needs:
      - unit_test
      - generate-doc
    outputs:
      new_tag: ${{ steps.tag.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v2
      - name: Bump version and push tag
        id: tag
        uses: anothrNick/github-tag-action@1.36.0
        env:
          DEFAULT_BUMP: patch
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
